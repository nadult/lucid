diff --git a/data/shaders/raster_bin_fastest.shader b/data/shaders/raster_bin_fastest.shader
index 28d767c..ca7c44e 100644
--- a/data/shaders/raster_bin_fastest.shader
+++ b/data/shaders/raster_bin_fastest.shader
@@ -538,7 +538,7 @@ void generateBlocks(uint bid) {
 
 		uvec2 bits;
 		uvec2 num_frags;
-		vec2 cpos = vec2(0);
+		uint csum = 0;
 
 #define PROCESS_ROWS(e)                                                                            \
 	int min0 = max(int((tri_mins.e >> 0) & 63) - startx, 0);                                       \
@@ -553,10 +553,10 @@ void generateBlocks(uint bid) {
 	int count1 = max(max1 - min1 + 1, 0);                                                          \
 	int count2 = max(max2 - min2 + 1, 0);                                                          \
 	int count3 = max(max3 - min3 + 1, 0);                                                          \
-	cpos += vec2(float(count0 + (min0 << 1)), 1.0) * count0;                                       \
-	cpos += vec2(float(count1 + (min1 << 1)), 3.0) * count1;                                       \
-	cpos += vec2(float(count2 + (min2 << 1)), 5.0) * count2;                                       \
-	cpos += vec2(float(count3 + (min3 << 1)), 7.0) * count3;
+	csum += (count0 + (min0 << 1) + 0x10000) * count0;                                             \
+	csum += (count1 + (min1 << 1) + 0x30000) * count1;                                             \
+	csum += (count2 + (min2 << 1) + 0x50000) * count2;                                             \
+	csum += (count3 + (min3 << 1) + 0x70000) * count3;
 
 		{
 			PROCESS_ROWS(x);
@@ -572,7 +572,7 @@ void generateBlocks(uint bid) {
 		}
 
 		uint num_all_frags = num_frags.x + num_frags.y;
-		cpos *= 0.5 / float(num_all_frags);
+		vec2 cpos = vec2(csum & 0xffff, csum >> 16) * (0.5 / float(num_all_frags));
 		cpos += vec2(bx << 3, by << 3);
 
 		uint scratch_tri_offset = scratch64TriOffset(tri_idx);
@@ -1129,6 +1129,7 @@ void rasterBin(int bin_id) {
 		}
 		UPDATE_CLOCK(1);
 
+		// TODO: simplify handling of half block
 		int bid = fbid + int(LIX >> 6), hbid = int((LIX >> 5) & 1);
 		int frag_count = int((s_block_frag_count[bid & (NUM_WARPS - 1)] >> (hbid << 4)) & 0xffff);
 		int segment_id = 0;