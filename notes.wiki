*Skupiamy się na wydajnym renderingu przezroczystości; Chcemy szybko zamknąć ten temat*

Aktualne cele:
- przygotowanie zoptymalizowanej wersji w aktualnym schemacie renderingu
- zrobienie wersji raster_tile i ew. raster_block
- opisanie algorytmu
- wrzucenie gdzieś do sieci

Bug: 
- poziome linie widoczne na chestnut_tree01

-----------------------------------------------------------------------------------------
                             === Pomysły na optymalizacje ===
-----------------------------------------------------------------------------------------

- Precompute-owanie parametrów do scanline-a
  Czy dałoby się zrobić w fixed-point 16 bit ? A może 24 bity też ma sens?

- Liczenie od przodu i przerwanie w momencie przekroczenia thresholdu alphy.

- Odnoszenie się do tile-row-trisów i nie generowanie tile-rowów

- 16x16 czy 16x4 ? Która wersja lepsza ?

Pytania:
- Dlaczego 16 wątków na grupę jest wolniejsze w przypadku niektórych scen ?
- Dlaczego generateTiles jest dużo szybsze niż generateBlocks?
- Może 16x4 ma gorszą koherencję danych trójkątów / tekstur niż 8x8? Coś za coś...

-----------------------------------------------------------------------------------------
                                      === Statsy ===
-----------------------------------------------------------------------------------------

Wersja 16x4 2560x1330 (a82143f1 20.04):
            total  setup  bins  tiles  raster_bin
    #boxes: 1785   24     59    5      1624
     bunny: 571    69     52    5      382
conference: 1324   61     111   5      1007
    dragon: 957    187    72    100    276
    sponza: 3864   62     124   6      3521
    teapot: 536    28     45    5      414
 white_oak: 14794  54     263   6      14208
