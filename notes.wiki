*Skupiamy się na wydajnym renderingu przezroczystości; Chcemy szybko zamknąć ten temat*

Aktualne cele:
- przygotowanie zoptymalizowanej wersji w aktualnym schemacie renderingu
- zrobienie wersji raster_tile i ew. raster_block
- opisanie algorytmu
- wrzucenie gdzieś do sieci

Bugi: 
- poziome linie widoczne na chestnut_tree01
- miganie na sponzie w górnej części (screenshot)
- niedokładne wyznaczanie ilości trisów per tile (dużo więcej niż faktycznie)

-----------------------------------------------------------------------------------------
                                 === Co dalej ===
-----------------------------------------------------------------------------------------

- Poprawna obsługa sytuacji gdy limity są przekraczane; Nie mogę robić za dużo wariantów, bo
  w efekcie będzie wolniej a nie szybciej

- Problem: jak sensownie obługiwać tile-e z dużą ilością trisów ?
  Czy wogóle chcę robić computeTiles, czy może lepiej generować to z poziomu raster_tile ?
  musiałbym sprawdzić?

- Muszę zwiększyć ilość wątków na raster_tile, żeby opóźnienie w przypadku przejścia bin -> tile było mniejsze

- Chcę najpierw generować listy tile-sów lokalnie per bin?

Jak to zrobić ? mam listę trisów per-bin. Jak ją efektywnie przerobić? rzędami tak jak wcześniej?
tzn. po 4 rzędy na raz i wrzucamy do 4 kolejek; od razu generujemy listy dla 4 tile-i na raz;
te 4 kolejki musiałby być wszystkie przetwarzane w przypadku każdego tile-a

- Max 16K trójkątów ?

Musimy najpierw zwiększyć limit trókątów na blok, 256 to za mało.

-----------------------------------------------------------------------------------------
                          === Nie działające / nie pewne pomysły ===
-----------------------------------------------------------------------------------------

* Odnoszenie się do tile-row-trisów i nie generowanie tile-rowów
  BRAK PRZYSPIESZENIA w wersji 16x16, w wersji 16x4 nie da się tego łatwo zaimplementować...

? Precompute-owanie parametrów do scanline-a
  Czy dałoby się zrobić w fixed-point 16 bit ? A może 24 bity też ma sens?
  Fakt jest taki, że cała początkowa faza (process quads) na skomlikowanych scenach zajmuje ok 1%...
  W takim razie to chyba nie ma sensu...; Generowanie scanline-ów to pewnie mniej niż 25%...

-----------------------------------------------------------------------------------------
                                      === Statsy ===
-----------------------------------------------------------------------------------------

Wersja 16x4 2560x1330 (a82143f1 20.04):
            total  setup  bins  tiles  raster_bin
    #boxes: 1785   24     59    5      1624
     bunny: 571    69     52    5      382
conference: 1324   61     111   5      1007
    dragon: 957    187    72    100    276
    sponza: 3864   62     124   6      3521
    teapot: 536    28     45    5      414
 white_oak: 14794  54     263   6      14208


Wersja 16x4 2560x1330 raster_timings wyłączone (ae7a84ca 28.04):
             total  setup  bins  tiles  raster_bin
     #boxes: 1705   23     57    5      1541      
      bunny: 490    70     49    5      303       
 conference: 1342   61     109   5      1028      
conf-e(256): 1267   61     108   5      953       
     dragon: 918    188    66    100    236       
    gallery: 2451   216    75    121    1588      
     sponza: 3920   62     124   6      3568      
sponza(256): 3864   62     125   6      3510      
     teapot: 475    28     48    5      340       
  white_oak: 14091  51     251   6      13512     


Wersja 8x8 2560x1330 raster_timings wyłączone:
            total  setup  bins  tiles  raster_bin 
     #boxes: 1666   24     58    5      1512      (-2%)
      bunny: 500    69     49    5      300       (-1%)
 conference: 1343   62     110   5      1025      
conf-e(256): 1250   61     110   5      934       (-2%)
     dragon: 935    188    72    100    254       
    gallery: 2516   217    79    125    1650      
     sponza: 3892   63     126   6      3533      
sponza(256): 3818   63     123   6      3473      (-1%)
     teapot: 460    28     46    5      329       
  white_oak: 13962  51     254   7      13388     (-1%)

Shade zmergowane z reduce 2560x1330 rastertimings wyłączone:
            total  setup  bins  tiles  raster_bin  raster_tile  raster_block
    #boxes: 1656   24     59    5      1493        4            4
     bunny: 509    70     52    5      316         4            4
conference: 1346   62     112   5      1029        4            4
    dragon: 1087   188    72    99     253         400          4
   gallery: 3367   215    73    123    1666        1122         10
powerplant: 8724   1979   581   1454   771         3642         11
    sponza: 3872   63     126   6      3518        5            4
    teapot: 480    29     52    5      333         5            4
 white_oak: 13533  49     248   5      13084       5            4

Przywrócone segmenty 2560x1330 rastertimings wyłączone:
            total  setup  bins  tiles  raster_bin  raster_tile  raster_block
    #boxes: 1628   24     59    5      1466        4            4
     bunny: 486    70     48    5      303         4            4
conference: 1325   61     113   5      1011        4            4
    dragon: 1078   188    69    99     253         397          4
   gallery: 3398   217    74    126    1648        1130         10
powerplant: 8678   1990   568   1450   751         3683         11
    sponza: 3783   62     124   5      3429        4            4
    teapot: 468    27     49    5      327         4            4
 white_oak: 13352  51     252   6      12898       5            4