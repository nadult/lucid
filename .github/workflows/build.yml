name: build

on:
  push:
    branches:
      - '**'
  workflow_call:

jobs:
  build-windows:
    runs-on: windows-2022
    env:
      VS_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise
      MSBUILD_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        env:
            cache-name: cache-deps
        with:
            path: C:/libraries
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('libfwk/tools/install_deps.py') }}-v1

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        name: Install dependencies
        shell: cmd
        run: |
          pip install conan
          python libfwk/tools/install_deps.py C:/libraries

      - name: Build libfwk release
        shell: cmd
        run: |
          "%MSBUILD_PATH%" libfwk\windows\libfwk.vcxproj /p:Platform=x64 /p:Configuration=Release

      - name: Build lucid release
        shell: cmd
        run: |
          "%MSBUILD_PATH%" windows\lucid.vcxproj /p:Platform=x64 /p:Configuration=Release

      - name: Prepare archive files
        shell: cmd
        run: |
          mkdir lucid-raster
          copy build\lucid-x64-Release\lucid.exe lucid-raster\
          xcopy data\shaders\ lucid-raster\data\shaders\ /E
          copy C:\libraries\x86_64\bin\shaderc_shared.dll lucid-raster\
          copy C:\libraries\x86_64\bin\vulkan-1.dll lucid-raster\

      - name: Archive build
        uses: actions/upload-artifact@v3
        with:
          name: lucid-release-build
          path: lucid-raster
