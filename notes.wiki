*Skupiamy się na wydajnym renderingu przezroczystości; Chcemy szybko zamknąć ten temat*

Aktualne cele:
- przygotowanie zoptymalizowanej wersji w aktualnym schemacie renderingu
- zrobienie wersji raster_tile i ew. raster_block
- opisanie algorytmu
- wrzucenie gdzieś do sieci

Bugi: 
- poziome linie widoczne na chestnut_tree01
- miganie na sponzie w górnej części (screenshot)
- niedokładne wyznaczanie ilości trisów per tile (dużo więcej niż faktycznie)

-----------------------------------------------------------------------------------------
                                 === Co dalej ===
-----------------------------------------------------------------------------------------

- Na niektórych scenach bardziej opłaca się odpalić tylko wersję tile (jest szybciej)
  z czego to wynika?
  Opłaca się na: dragon, san-miguel
  Nie opłaca się na: sponza, conference, bunny

- Poprawna obsługa sytuacji gdy limity są przekraczane; Nie mogę robić za dużo wariantów, bo
  w efekcie będzie wolniej a nie szybciej

- Problem: jak sensownie obługiwać tile-e z dużą ilością trisów ?
  Czy wogóle chcę robić computeTiles, czy może lepiej generować to z poziomu raster_tile ?
  musiałbym sprawdzić?

- Muszę zwiększyć ilość wątków na raster_tile, żeby opóźnienie w przypadku przejścia bin -> tile było mniejsze

- Chcę najpierw generować listy tile-sów lokalnie per bin?

Jak to zrobić ? mam listę trisów per-bin. Jak ją efektywnie przerobić? rzędami tak jak wcześniej?
tzn. po 4 rzędy na raz i wrzucamy do 4 kolejek; od razu generujemy listy dla 4 tile-i na raz;
te 4 kolejki musiałby być wszystkie przetwarzane w przypadku każdego tile-a

4 rzedy po max 64 pixele. 12 bitów na rząd; 48 bitów w sumie; 12-13 bitów na id trókąta.
8 bitów potrzebne na bx-maskę...

Może biny są za duże ? Lepsze by były 32x32 ?
- mniejsza ilość elementów per bin
- grupy wątków mają 4x więcej elementów do przetworzenia
Problem: liczniki dla rozdzielczości 4096x4096 zajmą 64KB. Mógłbym zrobić podział trókątów
na grupy (powiedzmy 512x512?) i każdą grupę bym rozpatrywał oddzielnie?
Na razie chyba zostajemy z binami...

Co zrobić z sytuacjami gdy mamy bardzo dużo trisów? 128K quadów -> >64K trisów/tile
- przechowywanie 128K rzędów wymaga 128 * 1024 * 8 = 1MB
- przechowanie mapy bitów dla pokrywanych tile-i: 128 * 1024 * 2 = 256K

Jakaś forma alokacji pamięci ? Ale jak to później zwalniać? co najmniej musiałbym mieć jakiś
buddy allocator, ale to jest wolne...

Rozwiązanie nie musi być perfekcyjne od samego początku... 

Może się zdarzyć, że wszystkie trisy wylądują w tym samym tile-u. I co wtedy? Bail ? po prostu
nie obsługuję wszystkich sytuacji i tyle ? wszystkie inne algorytmy też mają jakieś ograniczenia
(nie licząc hardware-u).

Powiedzmy, że chcemy mieć możliwość zrenderowania hairballa i powerplant i tyle. Więcej trisów obsługiwać
nie muszę!

A może max rozdziałka 2560x2048 ? 5000

Plan:
- zmniejszamy wielkość bina do 32x32 i tile-a do 8x8; blok: 4x4

-----------------------------------------------------------------------------------------
                         === Nie działające / nie pewne pomysły ===                      
-----------------------------------------------------------------------------------------

* Odnoszenie się do tile-row-trisów i nie generowanie tile-rowów
  BRAK PRZYSPIESZENIA w wersji 16x16, w wersji 16x4 nie da się tego łatwo zaimplementować...

? Precompute-owanie parametrów do scanline-a
  Czy dałoby się zrobić w fixed-point 16 bit ? A może 24 bity też ma sens?
  Fakt jest taki, że cała początkowa faza (process quads) na skomlikowanych scenach zajmuje ok 1%...
  W takim razie to chyba nie ma sensu...; Generowanie scanline-ów to pewnie mniej niż 25%...

-----------------------------------------------------------------------------------------
                                      === Statsy ===
-----------------------------------------------------------------------------------------

Wersja 16x4 2560x1330 (a82143f1 20.04):
            total  setup  bins  tiles  raster_bin
    #boxes: 1785   24     59    5      1624
     bunny: 571    69     52    5      382
conference: 1324   61     111   5      1007
    dragon: 957    187    72    100    276
    sponza: 3864   62     124   6      3521
    teapot: 536    28     45    5      414
 white_oak: 14794  54     263   6      14208


Wersja 16x4 2560x1330 raster_timings wyłączone (ae7a84ca 28.04):
             total  setup  bins  tiles  raster_bin
     #boxes: 1705   23     57    5      1541      
      bunny: 490    70     49    5      303       
 conference: 1342   61     109   5      1028      
conf-e(256): 1267   61     108   5      953       
     dragon: 918    188    66    100    236       
    gallery: 2451   216    75    121    1588      
     sponza: 3920   62     124   6      3568      
sponza(256): 3864   62     125   6      3510      
     teapot: 475    28     48    5      340       
  white_oak: 14091  51     251   6      13512     


Wersja 8x8 2560x1330 raster_timings wyłączone:
            total  setup  bins  tiles  raster_bin 
     #boxes: 1666   24     58    5      1512      (-2%)
      bunny: 500    69     49    5      300       (-1%)
 conference: 1343   62     110   5      1025      
conf-e(256): 1250   61     110   5      934       (-2%)
     dragon: 935    188    72    100    254       
    gallery: 2516   217    79    125    1650      
     sponza: 3892   63     126   6      3533      
sponza(256): 3818   63     123   6      3473      (-1%)
     teapot: 460    28     46    5      329       
  white_oak: 13962  51     254   7      13388     (-1%)

Shade zmergowane z reduce 2560x1330 rastertimings wyłączone:
            total  setup  bins  tiles  raster_bin  raster_tile  raster_block
    #boxes: 1656   24     59    5      1493        4            4
     bunny: 509    70     52    5      316         4            4
conference: 1346   62     112   5      1029        4            4
    dragon: 1087   188    72    99     253         400          4
   gallery: 3367   215    73    123    1666        1122         10
powerplant: 8724   1979   581   1454   771         3642         11
    sponza: 3872   63     126   6      3518        5            4
    teapot: 480    29     52    5      333         5            4
 white_oak: 13533  49     248   5      13084       5            4

Przywrócone segmenty 2560x1330 rastertimings wyłączone:
            total  setup  bins  tiles  raster_bin  raster_tile  raster_block
    #boxes: 1628   24     59    5      1466        4            4
     bunny: 486    70     48    5      303         4            4
conference: 1325   61     113   5      1011        4            4
    dragon: 1078   188    69    99     253         397          4
   gallery: 3398   217    74    126    1648        1130         10
powerplant: 8678   1990   568   1450   751         3683         11
    sponza: 3783   62     124   5      3429        4            4
    teapot: 468    27     49    5      327         4            4
 white_oak: 13352  51     252   6      12898       5            4


 Tylko raster_tile 2560x1330 bez raster_timings:
             total  setup  bins  tiles  raster_bin  raster_tile  raster_block
    dragon: 1002   188    71    125    6           545          4
  hairball: 6148   552    198   1509   6           3743         16
powerplant: 9149   1980   578   1491   6           4862         11
san-miguel: 7807   1081   268   740    6           5505         11